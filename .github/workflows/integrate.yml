on: [push, pull_request]
name: Integracion continua con node.js
jobs:
  ci_to_master:
    runs-on: ubuntu-latest
    container:
      image: node
    # Contenedores de servicio para ejecutar con `ci_to_master`
    services:
      redis:  # Etiqueta utilizada para acceder al contenedor de servicio
        # Imagen del contenedor Docker Hub
        image: redis
        # Establece revisiones de estado para esperar hasta que Redis haya comenzado
        options: >-
          --health-cmd "redis-cli ping"
          --health-cmd "CONFIG SET requirepass ${{ secrets.REDIS_PASSWORD }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: 'clone and checkout'
        uses: actions/checkout@v1
      - name: 'use node.js'
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: 'install dependencies'
        run: npm install
      - name: 'run eslint'
        run: npm run lint
      - name: 'npm run tests'
        run: npm test
        env:
          VUS_URL: ${{ secrets.VUS_URL }}
          VUS_API: ${{ secrets.VUS_API }}
          VUS_API_KEY: ${{ secrets.VUS_API_KEY }}
          REDIS_URI: ${{ secrets.REDIS_URI }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          PREFIJO_REDIS: ${{ secrets.PREFIJO_REDIS }}
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: false
